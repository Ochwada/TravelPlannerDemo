<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.5.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.ochwada</groupId>
    <artifactId>travel_planner</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>travel_planner</name>
    <description>Demo project for SpringBoot consuming external RESTful API</description>
    <url/>
    <licenses>
        <license/>
    </licenses>
    <developers>
        <developer/>
    </developers>
    <scm>
        <connection/>
        <developerConnection/>
        <tag/>
        <url/>
    </scm>
    <properties>
        <java.version>21</java.version>
    </properties>
    <dependencies>

		<!-- Enables MongoDB support with Spring Data (repositories, templates, etc.) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

		<!-- Adds support for Java Bean Validation (e.g., @NotNull, @Size) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

		<!-- Sets up Spring MVC with embedded Tomcat and JSON support -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

		<!-- Reduces boilerplate code with annotations like @Getter, @Setter, etc. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

		<!-- Provides testing support with JUnit, Mockito, and Spring Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- .env loader-->
        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>3.0.0</version>
        </dependency>


    </dependencies>

    <build>
        <plugins>

			<!-- Compiler plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
			<!-- Enables running and packaging Spring Boot apps via Maven : mvn spring-boot:run -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!--
			  Configures the Maven Surefire Plugin to run tests with the Mockito inline mock maker agent.

			  Mockito uses a Java agent to enable advanced mocking capabilities, such as:
				- Mocking final classes and methods
				- Mocking static methods
				- Inline mocking without subclassing

			  This agent is required to be loaded at JVM startup. In JDK 17+ and future versions,
			  dynamic agent loading (used by default) is discouraged or disabled. By specifying the
			  `-javaagent` argument manually, we ensure compatibility and eliminate runtime warnings.

			  `${settings.localRepository}` resolves to your local Maven repo path (e.g., ~/.m2/repository).
			-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <argLine>
                        -javaagent:${settings.localRepository}/org/mockito/mockito-inline/5.12.0/mockito-inline-5.12.0.jar
                    </argLine>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
